.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 1998 - 2022, Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://curl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" * SPDX-License-Identifier: curl
.\" *
.\" **************************************************************************
.\"
.TH CURLOPT_WS_WRITEFUNCTION 3 "10 Jun 2022" "libcurl 7.85.0" "curl_easy_setopt options"
.SH NAME
CURLOPT_WS_WRITEFUNCTION \- WebSockets write callback
.SH SYNOPSIS
.nf
#include <curl/curl.h>

ssize_t ws_callback(void *userdata, char *data, size_t len,
                    unsigned int flags);

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_WS_WRITEFUNCTION, ws_callback);
.fi
.SH DESCRIPTION
Pass a pointer to your WebSockets callback function, which should match the
prototype shown above.

Set the \fIuserdata\fP argument with the \fICURLOPT_WS_WRITEDATA(3)\fP option.

The callback should return...

.SH FLAGS
The \fIflags\fP argument in the callback is a bitmask featuring the following
(incoming) flags:
.IP CURLWS_TEXT
this is text data
.IP CURLWS_BINARY
This is binary data
.IP CURLWS_CLOSE
This transfer is now closed
.IP CURLWS_PING
This is a ping (if enabled)
.SH DEFAULT
0
.SH PROTOCOLS
WebSockets
.SH EXAMPLE
.nf
static int cb(void *userdata, char *data, size_t len, unsigned int flags)
{
   /* incoming WebSockets data */
}

CURL *curl = curl_easy_init();
if(curl) {
  curl_easy_setopt(curl, CURLOPT_URL, "ws://example.com/");
  /* use the stand alone API */
  curl_easy_setopt(curl, CURLOPT_WS_WRITEFUNCTION, cb);
  ret = curl_easy_perform(curl);
  curl_easy_cleanup(curl);
}
.fi
.SH AVAILABILITY
Added in 7.85.0
.SH RETURN VALUE
Returns CURLE_OK if the option is supported, and CURLE_UNKNOWN_OPTION if not.
.SH "SEE ALSO"
.BR CURLOPT_WS_WRITEDATA "(3), " curl_ws_recv "(3), " curl_ws_send "(3), "
